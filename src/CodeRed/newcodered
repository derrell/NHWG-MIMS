#!/bin/bash -e
#
# Dumb script to handle all the processing to generate CodeRed csv files
#
# Here's the outline:
# The CodeRed.js script updates the MongoDB CodeRed collections. The
# CodeRed collections are then dumped to CSV files and emailed to the 
# designated receiver (EMAILTO).
# 
# History:
# 16Aug19 MEG query regex's to JSON strict mode for MongoDB 4.2.
# 09Jan19 MEG NEW flag moved from Command field to Status(not exported) field.
# 01Dec18 MEG Added option to do export only without updating.
# 24Nov18 MEG Added options to skip email and change receiver email addr.
# 23Nov18 MEG Created.

# import MongoDB security credentials

. ./codered.creds

# the Wing database and authentication database
DB=NHWG

# Receiver for the CSV files
EMAILTO=pblais@nhwg.cap.gov
#EMAILTO=mgiguere@nhwg.cap.gov

# Update Code Red Collection (the default)
UPDATE=true

# commandline options
OPTS="eh?nx"

# The MongoDB CodeRed collections to be updated and exported
TABLES="CodeRed"

USAGE="Usage: $(basename $0) [$OPTS]\n
\tGenerate new Code Red csv files, email to receiver\n
\te - where to send email default ($EMAILTO)\n
\th? - help - this message\n
\tn - do not send email, generate csv files only\n
\tx - Export Code Red data only, do not update collections\n
"

while getopts $OPTS o; do
    case $o in
	e) EMAILTO=$o;;
	h?) echo -e $USAGE;exit 1;;
	n) NOEMAIL=1;;
	x) unset UPDATE;;
	*) echo -e $USAGE;exit 1;;
    esac
done
shift $(($OPTIND - 1 ))

for t in $TABLES;
do
    echo $t
# Update the CodeRed collection
    if [[ -v UPDATE ]]; then
	mongo --quiet --host localhost --authenticationDatabase=$DB \
	--username $USER --password $PASSWD $t.js
    fi
# Export the new CodeRed records as a csv file
   mongoexport --quiet --db $DB --collection $t --authenticationDatabase $DB \
	--username $USER --password $PASSWD --query '{"Status" : { "$regex": "new", "$options": "i" }}' \
	--fieldFile ./CodeRedFields.txt --type csv --out ./$t-new.csv
# Export the deleted CodeRed records as a csv file
     mongoexport --quiet --db $DB --collection $t"Prev" --authenticationDatabase $DB \
	--username $USER --password $PASSWD --query '{"Command": { "$regex": "delete", "$options": "i" }}' \
	--fieldFile ./CodeRedFields.txt --type csv --out ./$t-delete.csv
done
echo Done.

# Skip sending email reports if -n switch
[[ -v NOEMAIL ]] && exit 1

# Send files to Code Red contact
gam sendemail $EMAILTO subject "Code Red Updates" message "Code Red Updates attached." attach CodeRed-new.csv attach CodeRed-delete.csv
