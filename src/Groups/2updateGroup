#!/bin/bash -e
# Runs a MongoShell script given declaring the name of the groups class
# on the command line to update a Google group's membership.
# Each script is unique to a particular group.  Optionally you can
# include a JavaScript expression on the commandline that will be evaluated
# prior to running the main script. This is a crude method to pass
# commandline args to the script.
#
# Input:
# MongoShell script. By convention the script name is the basename of the class
# representing the group, e.g. Pilots.js.
# An optional JS expression to be evaluated by mongo shell.
#    NOTE: the expression may be a series of expressions separated by ";".
#    The entire expression must be enclosed in single quotes.

# example: group: allseniors@nhwg.cap.gov -> Group class name: AllSeniors.js
# Output:
# a MIMS type job file in the job queue

# History:
# 14Jul22 MEG AUTORUNGROUP removed. NOAUTORUNGROUP skips update.
# 10Jul22 MEG Added AUTORUNGROUP env var to automatically invoke group update.
#             If not defined the group class is only instantiated.
# 06Jul22 MEG wrapper removed leaf classes now contain mainline.
# 25Jun22 MEG JS group wrapper script now generated by M4 macro processor.
# 24Jun22 MEG Removed need for external group wrapper scripts,
#             handled by internal script template $SCRIPT
# 07Jun22 MEG Job file suffix now configurable in .conf file
# 01Jun22 MEG DB passed on command line nolonger needed in JS scripts
# 02Feb22 MEG Added optional JS expression to be passed to mongo shell.
# 08Nov21 MEG Output file now gets timestamp T%H%M%S appended to name.
# 08Nov21 MEG Fixed not exit on 0 args, added optional JS expr.
# 05Sep19 MEG Created.
#

# import config var's
. ./$(basename $0).conf

# get credentials
. $CREDS

# optional switches
OPTS="L:h?"

USAGE="Usage: $(basename $0) [$OPTS] <group JS> [ 'JS expr' ]\n
Generate a set of GAM commands to update a Google group.\n
\t <group JS> script to update a group.\n
\t [ JS expr ] Optional JS expression passed to script.\n
\t L - Path to the library of <group JS> scripts. ($LIB)\n
\t h? - this message.\n"

[[ $# < 1 ]] && (echo -e $USAGE;exit 1 )

while getopts $OPTS o; do
    case $o in
	L) LIB=$OPTARG;;
	h|?) echo -e $USAGE;exit 1;;
	*) echo -e $USAGE;exit 1;;
    esac
done
shift $(( $OPTIND - 1 ))

# Check to make sure a class script was specified
[[ ! -f "$LIB/$1" ]] && (echo "ERROR::Class: $1 not found in $LIB.";exit 1)

# Output Job filename
JOB=${1%.js}$SUFFIX.job

# Run the script
if [  -v NOAUTORUNGROUP ]; then
    echo "NOP Mode: would have run $1"
    echo "To actually run unset NOAUTORUNGROUP."
    exit 0
fi

mongosh --quiet  -u "$USERID" -p "$PASSWD" --authenticationDatabase $DB $DB \
	--eval \"$2\;\'\'\;\" $LIB/$1 >$JOBQ/$JOB
