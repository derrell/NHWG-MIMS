#!/bin/bash
## Copyright 2025 Marshall E. Giguere
##
##   Licensed under the Apache License, Version 2.0 (the "License");
##   you may not use this file except in compliance with the License.
##   You may obtain a copy of the License at
##
##       https://www.apache.org/licenses/LICENSE-2.0
##
##   Unless required by applicable law or agreed to in writing, software
##   distributed under the License is distributed on an "AS IS" BASIS,
##   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
##   See the License for the specific language governing permissions and
##   limitations under the License.


# Extract tables from CAPWATCH file and convert them to something
# mongoimport can live with. By default extracts tables listed
# in TABLES (see getTables.conf) and converts them to CSV files appropriate
# for monogimport. The user may substitute tables to be extracted by listing them
# on the commandline.  See importTables for further information on importing.
# A confg variable MAX_ZIP_AGE controls how old a CAPWATCH zip file can be
# before it is considered stale (expired) and ignored.
# MAX_ZIP_AGE is set to the maximum number of hours old a file can be
# before it is considered stale.  On stale, or missing CAPWATCH file
# getTables aborts.
#
# Exit codes:
# 1 - General exit.
# 2 - Missing conf file.
# 3 - Missing CAPWATCH archive
# 4 - CAPWATCH older than MAX_ZIP_AGE
#
# History:
# 24Mar21 MEG Added check for zip files too old.
# 21Mar21 MEG Added T option to override TZ offset.
# 18Mar21 MEG Detect UTC offset to properly calculate local midnight.
# 26Aug19 MEG Moved config options to external configuration file.
# 24Jun18 MEG Remove old csv files, check for missing CAPWATCH download.
# 25Mar18 MEG Extract Commanders table.
# 18Jul17 MEG Removed option to change archiver.
# 13Jul17 MEG User may now substitute tables form cmd line.
# 12Jul17 MEG Converts dates to MicroSoft SQL format.
# 03Jul17 MEG Convert date fields to Oracle UTC format.
# 23Jun17 MEG Created.
#

# convert hours to seconds
function hrs2secs () {
    echo $(( $1*60*60 ))
}

# File age - compute the age of a file is seconds
function fileage () {
    local ft=$(stat -c '%Y' $1)
    local tnow=$(date '+%s')
    echo $(( $tnow - $ft ))
}

# load configuration options
CONF=./$(basename $0).conf
if [ -f  $CONF ]; then
    . $CONF
else
    echo "Error: missing configuration file: $CONF"
    exit 2
fi

# Timezone offset from UTC to get timestamps to midnight local time
TZOFF=$(date +%z|cut -c 2-3)

# remove old download failure flag
/bin/rm -f CAPWATCHFAILED

# Options
OPTS="A:h?T:z:"

# Help message
USAGE="Usage: $(basename $0) [$OPTS] [table table...]\n
\tExtract tables from CAPWATCH archive and filter.\n
\tA - Max age in hrs of CAPWATCH archive ($MAX_ZIP_AGE)\n
\tT - Time Zone offset from UTC ($TZOFF)\n
\th|? - help\n
\tz - CAPWATCH zip file ($ZIP)\n
\tTABLES - ($TABLES)"

# Process options
while getopts $OPTS o; do
    case $o in
	A) MAX_AGE_ZIP=$OPTARG;;
	T) TZOFF=$OPTARG;;
	z) ZIP=$OPTARG;;
	h|?) echo -e $USAGE;exit 1;;
	*) echo -e $USAGE;exit 1;;
    esac
done
shift $(( $OPTIND - 1 ))

# Check for archive Zip file
if [ ! -f $ZIP ]; then
    echo "ERROR: file not found: $ZIP"
    touch CAPWATCHFAILED
    exit 3
fi

# Check to see if file CAPWATCH zip file is too old
if [[ $( fileage $ZIP ) -gt $(hrs2secs $MAX_ZIP_AGE ) ]]; then
    echo "ERROR: file: $ZIP older than $MAX_ZIP_AGE hours."
    touch CAPWATCHFAILED
    exit 4
fi

# Check for substituted list of tables
if [ $# -ge 1 ]; then
    TABLES=$@
fi

# remove old csv files
for f in $TABLES; do
    rm -f $f.csv &>/dev/null
done

# Extract each table, strip header line,
# convert dates to MicroSoft SQL format and write to a csv file
for t in $TABLES; do
    $ARC -p $ZIP $t.txt|tail -n +2|sed -r -e "s/(\")([0-9]+\/[0-9]{2}\/[0-9]{4})(\")/\2 $TZOFF:00:00/g" >$t.csv
done
