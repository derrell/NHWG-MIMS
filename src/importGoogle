#!/bin/bash -e
## Copyright 2017 Marshall E. Giguere
##
##   Licensed under the Apache License, Version 2.0 (the "License");
##   you may not use this file except in compliance with the License.
##   You may obtain a copy of the License at
##
##       http://www.apache.org/licenses/LICENSE-2.0
##
##   Unless required by applicable law or agreed to in writing, software
##   distributed under the License is distributed on an "AS IS" BASIS,
##   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
##   See the License for the specific language governing permissions and
##   limitations under the License.


# 
# Optional calls GAM to pull a JSON dump of the G-Suite user database.
# Imports JSON file into the wing NHWG database on MongoDB.  This script
# is intended "mostly" to be run as a cron/batch job.
#
# Note: You will need to update the variables to point to the utilities.
#
# History:
# 21Jul22 MEG --upsert not needed with --upsertFields.
# 03Jul22 MEG Indexing now adds DB, removed DB from index script.
# 28Oct19 MEG Added clear collection option, moved variables to config file.
# 12Aug18 MEG Added index Google collection script config variable.
# 20Jul18 MEG Index Google collection.
# 26May18 MEG Added "nolicenses" option to gam command.
# 22Jan18 MEG MongoDB login credentials required.
# 19Jan18 MEG Download now optional with -D switch
# 15Jul17 MEG Allow import to user specified collection and database.
# 10Jul17 MEG Changed json file filter now uses sed for speed.
# 09Jul17 MEG Created.
#

# load config variables
. ./$(basename $0).conf

# Default operation to use to import collection
CALL=upsert

# Download Google json
D=NO

# Index the collection
INDEX=no

# Collection in DB to import into
COLL=Google

# Load MongoDB login creds
. $CREDS

# Drops collection and imports them fresh.
# All data for the collection including indices are removed
# prior to importing the new data.
function drop() {
    $IMPORT --db $DB --authenticationDatabase=$DB --username=$MONGOUID \
	--password=$MONGOPASS --collection $1 --drop --type json --file $1.json

}

# Updates collection inserting new records if required.  No indexing
# of collections.  Collections are assumed to already have appropriate
# indexes.
function upsert() {
    $IMPORT --db $DB --authenticationDatabase=$DB --username=$MONGOUID \
--password=$MONGOPASS --collection $1 --type json --upsertFields primaryEmail,id --file $1.json
}

# Updates collection. Collection is first cleared this preserves indexes
# and collation.
function clear() {
   mongo --quiet -u $MONGOUID -p $MONGOPASS --authenticationDatabase=$DB <<EOJS
use $DB;
db.$COLL.remove( {} );
exit
EOJS
    $IMPORT --db $DB --authenticationDatabase=$DB --username=$MONGOUID \
--password=$MONGOPASS --collection $1 --type json --upsertFields primaryEmail,id --file $1.json
}

# options
OPTS="cDd:hiu?"

USAGE="Usage: $(basename $0) [$OPTS]\n
\tImport Google G-Suite member data\n
\tc - Clear collection then import\n
\tD - Download G-Suite members from Google first ($D)\n
\td - database ($DB)\n
\ti - index the collection ($INDEX)\n
\tu - update/upsert collection default is: ($CALL)\n
\th|? - this help\n"

while getopts $OPTS o; do
    case $o in
	c) CALL="clear";;
	D) D="yes";;
	d) DB=$OPTARG;;
	i) INDEX="yes";;
	u) CALL="upsert";;
	h|?) echo -e $USAGE;exit 1;;
	*) echo -e $USAGE;exit 1;;
    esac
done
shift $(($OPTIND - 1))

if [ $D = "yes" ]; then
    echo "Downloading Google members"
    $GAM redirect stderr $LOG info users all users nolicenses formatjson | sed -r -f ./jsonfix.sed >$COLL.json
    cat $LOG
fi

if [ -f $COLL.json ]; then
    echo Executing $CALL on $COLL
    $CALL $COLL
    echo "Done."
else
    echo "Error: unable to open JSON file: $COLL.json"
    exit 1
fi

# index Google collection
if [ $INDEX == "yes" ]; then
    echo "Indexing Google"
    if [ -f $INDEXSCRIPT ]; then
	mongosh  --quiet --host $HOST--username=$MONGOUID --password=$MONGOPASS --authenticationDatabase=$DB $DB $COLL-index.js
	echo "Done."

    else
	echo "WARNING:Indexing script: $INDEXSCRIPT not found."
	echo "Indexing not performed."
    fi
fi

